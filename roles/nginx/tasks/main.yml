- name: Update repositories cache and install "nginx, prometheus" package
  apt:
    name: 
      - nginx
      - prometheus
    state: latest
    update_cache: yes

- name: Stop nginx
  service:
    name: nginx
    state: stopped

- name: Create nginx config from template
  template: 
    backup: yes
    src: nginx.conf.j2
    dest: "{{ nginx_config_file }}"

- name: Restart nginx
  service:
    name: nginx
    state: restarted


- name: prometheus config file
  template:
    src: prometheus.conf.j2
    dest: /etc/prometheus/prometheus.yml

- name: Restart prometheus
  service:
    name: prometheus
    state: restarted

- name: ensure grafana apt key is present
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present
  tags: [ apt ]

- name: ensure grafana apt repository is present
  apt_repository:
    repo="deb https://packages.grafana.com/oss/deb stable main"
    update_cache=yes
    state=present
  become: yes
  tags: [ apt ]

- name: ensure grafana is installed
  apt:
    name=grafana
    state=present
  become: yes
  tags: installation

- name: ensure grafana is running and enabled to start on boot
  service:
    name=grafana-server
    state=started
    enabled=yes
  become: yes

- name: Stop and remove MongoDB
  docker_container:
    name: mongo
    state: absent

- name: Stop and remove Tank Exhauster
  docker_container:
    name: exhauster
    state: absent

- name: Prune Docker
  docker_prune:
    containers: yes
    images: yes
    networks: yes
    volumes: yes
    builder_cache: yes

- name: Create docker container mongodb
  docker_container:
    name: mongo 
    image: mongo:latest
    restart: yes
    restart_policy: always
    pull: yes 

- name: Create docker container tank exhauster
  docker_container:
    name: exhauster 
    image: geocode.igd.fraunhofer.de:4567/marauder/exhauster:latest
    restart: yes
    restart_policy: always
    pull: yes
    links:
    - "mongo:mongo"
    ports:
    - "8082:8080"
    env:
      EXHAUSTER_MONGO_HOST: "mongo"
      