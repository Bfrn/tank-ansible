- name: Create elk bridge-network
  docker_network:
    name: elk-net

- name: Copy tank_pipeline.conf to remote-server
  template: 
    src: tank_pipeline.conf.j2
    dest: /tmp/tank_pipeline.conf
    owner: root
    mode: '0644'

- name: Copy pipelines.yml to remote-server
  template: 
    src: pipelines.yml.j2
    dest: /tmp/pipelines.yml
    owner: root
    mode: '0644'

- name: Stop and remove logstash
  docker_container:
    name: logstash
    state: absent

- name: Create a logstash docker-container
  docker_container:
    name: logstash
    image: docker.elastic.co/logstash/logstash:7.0.1
    env:
      XPACK_MONITORING_ELASTICSEARCH_HOSTS: http://es01:9200
    volumes:
      - /tmp/tank_pipeline.conf:/usr/share/logstash/pipeline/tank_pipeline.conf
      - /tmp/pipelines.yml:/usr/share/logstash/config/pipelines.yml
    ports:
      - "5044:5044"
    networks_cli_compatible: yes
    networks:
      - name: elk-net

- sysctl:
    name: vm.max_map_count
    value: "262144"
    reload: yes

- name: Create a elasticsearch docker-container
  docker_container:
    name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    env:
      node.name: "es01"
      cluster.initial_master_nodes: "es01"
      cluster.name: "docker-cluster"
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      - memlock:-1:-1
    ports:
      - "9200:9200"
    volumes: 
      - esdata01:/usr/share/elasticsearch/data
    networks_cli_compatible: yes
    networks:
      - name: elk-net

- name: Wait for Elasticsearch running
  wait_for:
    port: 9200
    delay: 5

- name: Create a kibana docker-container
  docker_container:
    name: kibana
    image: docker.elastic.co/kibana/kibana:7.0.1
    env:
      ELASTICSEARCH_HOSTS: "http://es01:9200"
      SERVER_BASEPATH: "/kibana"
    ports:
      - "5601:5601"
    networks_cli_compatible: yes
    networks:
      - name: elk-net

- name: Wait for Kibana running
  wait_for:
    port: 5601
    delay: 5

- name: Import tank-dashboard
  uri:
    url: "http://localhost:5601/api/kibana/dashboards/import"
    method: POST
    status_code: 200
    body: "{{ lookup('template', './tank_dashboard.json.j2') }}" 
    body_format: json
    headers:
      kbn-xsrf: true